package com.neuedu.dao;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.neuedu.pojo.UserInfo;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.PathVariable;

import java.util.List;

public interface UserInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    int insert(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    UserInfo selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    List<UserInfo> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(UserInfo record);


    /**
     * 根据用户名和密码查询用户信息
     * */
    UserInfo selectUserInfoByUsernameAndPassword(@Param("username") String username,
                                                 @Param("password") String password);



    String checkQuestionByUsername(@Param("username") String username);


    /**
     * 根据username,qeestion,anwser查询
     * */
    int selectByUsernameAndQuestionAndAnwser(@Param("username") String username,
                                             @Param("question") String question,
                                             @Param("answer") String answer);

    /**
     * 修改用户密码接口
     * */
    int updateUsernamePassword(@Param("username") String username,
                       @Param("passwordNew") String passwordNew);

    /**
     * 校验用户名是否存在
     * */
    int  checkUsername(String username);

    /**
     * 校验邮箱是否存在
     * */
    int  checkEmail(String email);
    /**
     * 更新用户信息
     * */
    int  updateUserBySelectActive(UserInfo userInfo);

    /**
     * 更新用户token信息
     * */
    int updateUserTokenByUserId(@Param("userId") Integer userId,
                                @Param("token") String token);

    /**
     * 根据token查询用户信息
     * */
    UserInfo findUserInfoByToken(String token);
}